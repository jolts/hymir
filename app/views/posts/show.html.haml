- title h(@post.title), false

%div#single{:class => @post.published ? nil : 'draft'}
  .content
    .head
      %span.actions
        - if can? :update, @post
          %span.edit= link_to image_tag('page_edit.png'), edit_post_path(@post), :rel => 'tipsy', :title => t('actions.edit')
        - if can? :destroy, @post
          %span.destroy= link_to image_tag('page_delete.png'), @post, :method => :delete, :confirm => 'Are you sure?', :rel => 'tipsy', :title => t('actions.destroy')
      %h2.title
        = h @post.title
    .body
      = markdown @post.body
    .foot
      = t '.meta', :time => content_tag(:span, l(@post.published_or_created_at, :format => :long), :title => l(@post.published_or_created_at)), :user => h(@post.creator.username), :tags => (@post.tags.any? ? tag_paths(@post.tags) : t('posts.uncategorized'))
      %br/
      = t '.info', :feed => link_to(t('posts.feed'), post_path(@post, :format => :atom), :class => 'feed'), :comment => link_to(t('posts.leave_comment'), "#{post_path(@post)}#new_comment"), :trackback => link_to(t('posts.trackback'), post_path(@post, :format => :html))

#comments
  - if @post.published
    - if @post.comments.any?
      %h2#comments_count= pluralize @post.comments.count, t('posts.comment')
      %ul#comments_list
        - @post.comments.sort_by {|c| c.created_at}.each do |comment|
          %li{:class => "post_comment#{comment.has_user ? ' has_user' : nil}"}
            .info
              = image_tag comment.gravatar(20), :alt => 'Gravatar', :size => '20x20', :class => 'gravatar'
              %strong.username= link_to_unless comment.url.blank?, h(comment.name), comment.url
              %p.meta= content_tag :span, l(comment.created_at, :format => :shortest), :title => l(comment.created_at)
            .body
              - if can? :destroy, comment
                %span.destroy= link_to image_tag('comment_delete.png'), post_comment_path(@post, comment), :method => :delete, :confirm => 'Are you sure?', :rel => 'tipsy', :title => t('actions.destroy')
              = markdown comment.body
    - else
      %h2#comments_count= t '.comments.no_comments'
    - if can? :create, Comment
      %h2#new_comment= t '.comments.new'
      = render 'comments/form'
